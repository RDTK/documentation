  aspect

     Aus Benutzersicht beschreibt ein Aspect möglichst kohärent eine oder
     mehrere Einstellungen eines Jobs und stellt Variablen bereit, um diese
     Einstellungen zu setzen.

     Aus Sicht des Generators bildet ein Aspect diese Einstellungen auf
     Konfigurationsoptionen eines oder mehrerer Jenkins-Plugins ab. Dabei
     findet unter Umständen eine Transformation der Einstellungen und eine
     Abstraktion von dem Datenmodell statt, dass die Jenkins-Plugins in der
     config.xml-Beschreibung verwenden.

     Z.B. wird die Liste der Umgebungsvariablen eines Slaves von einer Liste
     von Key-Value-Paaren auf Orte mit XPath-Beschreibungen

     /slave/nodeProperties/hudson.slaves.EnvironmentVariablesNodeProperty/envVars/tree-map/int/text()
     <- Anzahl der Einträge in der "tree-map"
     /slave/nodeProperties/hudson.slaves.EnvironmentVariablesNodeProperty/envVars/tree-map/string/text()
     <- Abwechselnde Key und Value Einträge

     abgebildet.

     Dieses Datenmodell ist manchmal auch je nach Plugin-Version
     unterschiedlich, so dass der Generator teilweise die Plugin-Version
     auswertet und Einträge entsprechend dekodiert.

     > Muss man da auch auf etwas achten?

     Neue Aspect-Arten können nur im Generator definiert werden.
     Aspect-Instanzen können in Templates hinzugefügt werden.
